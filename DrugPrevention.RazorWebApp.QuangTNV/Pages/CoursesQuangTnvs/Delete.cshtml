@page
@model DrugPrevention.RazorWebApp.QuangTNV.Pages.CoursesQuangTnvs.DeleteModel

@{
    ViewData["Title"] = "Delete";
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>CoursesQuangTnv</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoursesQuangTnv.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoursesQuangTnv.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoursesQuangTnv.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoursesQuangTnv.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoursesQuangTnv.AgeGroup)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoursesQuangTnv.AgeGroup)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoursesQuangTnv.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoursesQuangTnv.Category)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoursesQuangTnv.DurationInMinutes)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoursesQuangTnv.DurationInMinutes)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoursesQuangTnv.InstructorName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoursesQuangTnv.InstructorName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoursesQuangTnv.ContentUrl)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoursesQuangTnv.ContentUrl)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoursesQuangTnv.ThumbnailUrl)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoursesQuangTnv.ThumbnailUrl)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoursesQuangTnv.LearningObjectives)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoursesQuangTnv.LearningObjectives)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoursesQuangTnv.CreatedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoursesQuangTnv.CreatedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoursesQuangTnv.UpdatedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoursesQuangTnv.UpdatedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoursesQuangTnv.IsActive)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoursesQuangTnv.IsActive)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoursesQuangTnv.ViewCount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoursesQuangTnv.ViewCount)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoursesQuangTnv.Rating)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoursesQuangTnv.Rating)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoursesQuangTnv.DifficultyLevel)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoursesQuangTnv.DifficultyLevel)
        </dd>
    </dl>

    <form method="post">
        <input type="hidden" asp-for="CoursesQuangTnv.CourseIdquangTnv" id="courseId" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <input type="button" id="btnHubDelete" value="Delete by SignalRHub" class="btn btn-primary" />

        <a asp-page="./Index">Back to List</a>
    </form>
</div>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>
    "use strict";    var connection = new signalR.HubConnectionBuilder()
        .withUrl("/drugPreventionHub")
        .withAutomaticReconnect()
        .configureLogging(signalR.LogLevel.Information)
        .build();    connection.start().then(function () {
        console.log("Connected to the SignalR Hub");
    }).catch(function (err) {
        console.error("SignalR connection error: ", err.toString());
        // Try to reconnect after 5 seconds
        setTimeout(function() {
            connection.start();
        }, 5000);
    });

    // Handle successful deletion
    connection.on("Receive_DeleteCourseQuangTNV", function (courseId) {
        console.log("Course deleted successfully:", courseId);
        showAlert('success', 'Course deleted successfully! Redirecting...');
        // Redirect to index page after successful deletion
        setTimeout(function() {
            window.location.href = '/CoursesQuangTnvs';
        }, 2000);
    });

    // Handle delete errors
    connection.on("Receive_DeleteError", function (errorMessage) {
        console.error("Delete error received:", errorMessage);
        showAlert('danger', 'Error deleting course: ' + errorMessage);
    });

    // Function to show alert messages
    function showAlert(type, message) {
        const alertHtml = `
            <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        `;
        
        // Insert at the top of the page
        $('main').prepend(alertHtml);
        
        // Auto-dismiss after 5 seconds
        setTimeout(function() {
            $('.alert').fadeOut(500, function() {
                $(this).remove();
            });
        }, 5000);
    }document.getElementById("btnHubDelete").addEventListener("click", function (event) {

        //alert("btnHubDelete");

        var dataObj = document.getElementById("courseId").value;
        console.log("Deleting course with ID:", dataObj);

        @* Calls method of SignalRHub server with primary key *@
        connection.invoke("HubDelete_CoursesQuangTnv", dataObj).then(function() {
            console.log("HubDelete_CoursesQuangTnv method called successfully");
            setTimeout(()=> {
                window.location.href = '/CoursesQuangTnvs';
            }, 1000);
        }).catch(function (err) {
            console.error("Error calling hub method:", err.toString());
            return;
        });

        event.preventDefault();
    });

</script>
